name: CI

on:
  pull_request:
    branches:
      - main
jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    env:
      architecture: "amd64"
      GRADLE_OPTS: "-Xmx6g -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Set up QEMU for Docker
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Check Dockerfile syntax
        run: |
          docker run --rm -i hadolint/hadolint < docker/Dockerfile

      - name: Build Docker image
        id: build_docker
        run: |
          output=$(./gradlew distDocker)
          echo "$output"
          image=$(echo "$output" | grep "DOCKER_IMAGE=" | cut -d'=' -f2)
          if [ -z "$image" ]; then
            echo "Error: Docker image name could not be extracted."
            exit 1
          fi
          echo "DOCKER_IMAGE=$image" >> $GITHUB_ENV
          echo "Docker image name: $image"
          docker images

      - name: Save Docker image
        run: |
          docker save ${{ env.DOCKER_IMAGE }} -o /tmp/docker-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/docker-image.tar

  split_tests:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.list.outputs.files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List files
        id: list
        run: |
          files=$(ls linea-besu/profiles/* | xargs -n 1 basename | sed 's/\.[^.]*$//')
          echo "::set-output name=files::$(echo $files | jq -R -s -c 'split("\n") | map(select(length > 0))')"
          echo "Files: $files"

