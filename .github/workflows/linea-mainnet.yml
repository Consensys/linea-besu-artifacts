name: linea-mainnet

on:
  pull_request:
    branches:
      - main

  workflow_call:
    outputs:
      workflow_run_id: 
        description: "the run id of the workflow"
        value: ${{ jobs.build.outputs.workflow_run_id }}
  workflow_dispatch:

permissions:
  id-token: write  
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dockerhub
    outputs:
      workflow_run_id: ${{ steps.workflow_details.outputs.id }}
    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: build the linea mainnet artifacts
        id: assemble
        uses: ./.github/actions/assemble-mainnet

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3   

      - name: login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_RW }}
          password: ${{ secrets.DOCKER_PASSWORD_RW }}
      
      - name: set docker build args
        run: |
          echo "Building docker tag: ${{ steps.assemble.outputs.dockertag }}"
          echo "Building docker image: ${{ steps.assemble.outputs.dockerimage }}"

      - name: build and push the combined manifest
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: linea-besu/.
          platforms: linux/arm64,linux/amd64
          provenance: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache          
          build-args: |
            VERSION=${{ steps.assemble.outputs.dockertag }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.assemble.outputs.build_date }}
          push: true
          tags: |
            consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }}

      ### release process artifacts
      ## adds one more tag :latest the above push on a release 
      - name: build and push the combined manifest
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: linea-besu/.
          platforms: linux/arm64,linux/amd64
          provenance: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache          
          build-args: |
            VERSION=${{ steps.assemble.outputs.dockertag }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.assemble.outputs.build_date }}
          push: true
          tags: |
            consensys/linea-besu-package:mainnet-latest

      ### release package artifacts
      - name: release on tag - create artifacts for a release
        if: startsWith(github.ref, 'refs/tags/v')
        id: release_create_artifacts
        run: |
          mkdir release && cd release
          tar -czvf linea-besu-${{ steps.assemble.outputs.dockertag }}.tar.gz ../linea-besu/

          echo "## Release Artifact: Linea - Mainnet" > output.md
          echo "linea-besu-${{ steps.assemble.outputs.dockertag }}.tar.gz" >> output.md
          echo "SHA256: $(sha256sum linea-besu-${{ steps.assemble.outputs.dockertag }}.tar.gz | awk '{ print $1 }' )" >> output.md
          echo "" >> output.md

          echo "## Besu and Plugin Details" >> output.md
          echo "| Module | Version | SHA-256 |" >> output.md
          echo "|--------|---------|--------------|" >> output.md
          echo "| linea-besu | ${{ steps.dotenv.outputs.LINEA_BESU_TAR_GZ }} | $(sha256sum /tmp/linea-besu-${{ steps.dotenv.outputs.LINEA_BESU_TAR_GZ }}.tar.gz | awk '{ print $1 }' ) |" >> output.md
          echo "| linea-sequencer-plugin | ${{ steps.dotenv.outputs.LINEA_SEQUENCER_PLUGIN_VERSION }} | $(sha256sum ../linea-besu/besu/plugins/besu-sequencer-plugins-v${{ steps.dotenv.outputs.LINEA_SEQUENCER_PLUGIN_VERSION }}.jar | awk '{ print $1 }' ) |" >> output.md    
          echo "| linea-tracer-plugin | ${{ steps.dotenv.outputs.LINEA_TRACER_PLUGIN_VERSION }} | $(sha256sum ../linea-besu/besu/plugins/linea-tracer-v${{ steps.dotenv.outputs.LINEA_TRACER_PLUGIN_VERSION }}.jar | awk '{ print $1 }' ) |" >> output.md    
          echo "| linea-finalized-tag-updater-plugin | ${{ steps.dotenv.outputs.FINALIZED_TAG_UPDATER_PLUGIN_VERSION }} | $(sha256sum ../linea-besu/besu/plugins/finalized-tag-updater-v${{ steps.dotenv.outputs.FINALIZED_TAG_UPDATER_PLUGIN_VERSION }}.jar | awk '{ print $1 }' ) |" >> output.md    
          echo "| shomei-plugin | ${{ steps.dotenv.outputs.SHOMEI_PLUGIN_VERSION }} | $(sha256sum ../linea-besu/besu/plugins/besu-shomei-plugin-v${{ steps.dotenv.outputs.SHOMEI_PLUGIN_VERSION }}.jar | awk '{ print $1 }' ) |" >> output.md    
          echo "" >> output.md

          MANIFEST=$(docker manifest inspect consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }})
          if [ $? -eq 0 ]; then
            echo "## Docker Image Details" >> output.md
            echo "" >> output.md
            echo "To pull the image, use the following command:" >> output.md
            echo "\`\`\`" >> output.md
            echo "docker pull consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }}" >> output.md
            echo "\`\`\`" >> output.md
            echo "" >> output.md
            echo "| Digest | OS | Architecture |" >> output.md
            echo "|--------|----|--------------|" >> output.md
            echo "$MANIFEST" | jq -r '.manifests[] | select(.platform.architecture != "unknown" and .platform.os != "unknown") | "| \(.digest) | \(.platform.os) | \(.platform.architecture) |"' >> output.md
          else
            echo "Docker image consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }} does not exist on dockerhub"
            exit 1
          fi

      - name: upload linea-mainnet artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: linea-mainnet
          retention-days: 1
          path: |
            ./release
